name: Build and Release

on:
  push:
    tags:
      - 'v*'
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary_name: rime
            artifact_name: rime-linux-x86_64
          - os: macos-latest
            target: x86_64-apple-darwin
            binary_name: rime
            artifact_name: rime-macos-x86_64
          - os: macos-latest
            target: aarch64-apple-darwin
            binary_name: rime
            artifact_name: rime-macos-aarch64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            binary_name: rime.exe
            artifact_name: rime-windows-x86_64.exe

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Cache cargo dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ matrix.target }}-
            ${{ runner.os }}-cargo-

      - name: Build binary
        run: cargo build --release --target ${{ matrix.target }} --bin rime

      - name: Copy binary (Unix)
        if: matrix.os != 'windows-latest'
        run: |
          mkdir -p artifacts
          cp target/${{ matrix.target }}/release/${{ matrix.binary_name }} artifacts/${{ matrix.artifact_name }}
          chmod +x artifacts/${{ matrix.artifact_name }}

      - name: Copy binary (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          mkdir artifacts
          copy target\${{ matrix.target }}\release\${{ matrix.binary_name }} artifacts\${{ matrix.artifact_name }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: artifacts/${{ matrix.artifact_name }}
          retention-days: 30

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/rime-linux-x86_64/rime-linux-x86_64
            artifacts/rime-macos-x86_64/rime-macos-x86_64
            artifacts/rime-macos-aarch64/rime-macos-aarch64
            artifacts/rime-windows-x86_64.exe/rime-windows-x86_64.exe
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}